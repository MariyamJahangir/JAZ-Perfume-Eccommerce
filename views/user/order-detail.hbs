{{>header}}
<style>
    .nav-item:hover {
        background-color: #DFF2FA;
        /* Light blue background on hover */
        cursor: pointer;
        /* Add a pointer cursor for better UX */
    }

    .nav-item.active {
        background-color: #DFF2FA;
        /* Fixed light blue background for active */
    }

    .bg-theme {
        background-color: #DFF2FA;
    }
</style>

<section style="background-color: #DFF2FA;">
    <div class="container">
        <div class="row p-5">
            <h2>Welcome Mariyam Jahangir</h2>
        </div>

    </div>
</section>
<section>
    <div class="container">
        <div class="row">
            <div class="col-2 mt-5">
                <nav class="d-flex flex-column p-3">
                    <a href="/profile" class="link-dark link-underline-opacity-0 nav-item rounded px-3 py-2 mb-2"><i
                            class="bi bi-person-circle p-2"></i>Profile</a>
                    <a href="/address" class="link-dark link-underline-opacity-0 nav-item rounded px-3 py-2 mb-2"><i
                            class="bi bi-cart4 p-2"></i>Address</a>
                    <a href="/wishlist" class="link-dark link-underline-opacity-0 nav-item rounded px-3 py-2 mb-2"><i
                            class="bi bi-heart p-2"></i>Wishlist</a>
                    <a href="/../orders"
                        class="link-dark link-underline-opacity-0 nav-item rounded px-3 py-2 mb-2 active"
                        aria-current="page"><i class="bi bi-truck p-2"></i>Orders</a>
                    <a href="/change-password"
                        class="link-dark link-underline-opacity-0 nav-item rounded px-3 py-2 mb-2"><i
                            class="bi bi-key p-2"></i>Password</a>
                    <a href="/wallet" class="link-dark link-underline-opacity-0 nav-item rounded px-3 py-2 mb-2"><i
                            class="bi bi-wallet2 p-2"></i>Wallet</a>
                    <a href="/logout" class="link-dark link-underline-opacity-0 nav-item rounded px-3 py-2 mb-2"><i
                            class="bi bi-box-arrow-right p-2"></i>Logout</a>
                </nav>
            </div>


            <div class="col-10">
                <div class="container m-4 p-4 border bg-theme">
                    <h1 class="text-center pb-4">ORDER DETAILS</h1>



                    {{#each order.items}}
                    <div class="grid gap-1 d-flex justify-content-between p-3">
                        <!-- Product Image -->
                        <div class="col-3 text-center p-2">
                            <a href="/product-details/{{this.productId._id}}/{{this.variantId}}"><img
                                    src="/uploads/{{this.productId.images.[0]}}" alt="{{this.productId.name}}"
                                    style="width: 60%"></a>
                        </div>

                        <!-- Product Details -->
                        <div class="col-5 d-flex align-items-center">
                            <div>
                                <p><a href="/product-details/{{this.productId._id}}/{{this.variantId}}"
                                        class="text-decoration-none link-dark">{{this.productId.name}}</a> -
                                    {{getVariantQuantity this.productId.variant this.variantId}} ML</p>

                                <p>Quantity: {{this.quantityCount}}</p>
                                <p>Price: Rs. {{this.discountPrice}}</p>
                                {{#if (or (isEqual this.status "Delivered") (isEqual this.status "Returned"))}}
                                <p>Delivered on: {{formatDate this.deliveredDate}}</p>{{/if}}
                            </div>
                        </div>

                        <!-- Actions -->
                        <div class="ps-4 col-4 d-flex flex-column justify-content-center">


                            <div class="p-2">
                                {{#if (isEqual this.status "Pending")}}
                                <span class="badge text-bg-primary">Pending</span>
                                {{else if (isEqual this.status "Delivered")}}
                                <span class="badge text-bg-success">Delivered</span>
                                {{else if (isEqual this.status "Returned")}}
                                <span class="badge text-bg-secondary">Returned</span>
                                {{else if (isEqual this.status "Shipped")}}
                                <span class="badge text-bg-info">Shipped</span>
                                {{else if (isEqual this.status "Cancelled")}}
                                <span class="badge text-bg-danger">Cancelled</span>
                                {{else}}
                                <span class="badge text-bg-warning">{{this.status}}</span>
                                {{/if}}
                            </div>

                            <div class="p-2" id="order-actions">
                                {{#if (isEqual this.status "Delivered")}}
                                <!-- Return Button -->
                                <button type="button" class="btn btn-outline-primary px-3 return-btn"
                                    data-action="return" data-order-id="{{../order._id}}" 
                                    data-product-id="{{this.productId._id}}" data-status="{{this.status}}" {{#if
                                    (isReturnEligible this.deliveredDate)}}disabled{{/if}}>
                                    Return
                                </button>
                                {{else}}
                                <!-- Cancel Button -->
                                <button type="button" class="btn btn-outline-danger px-3 cancel-btn"
                                    data-action="cancel" data-order-id="{{../order._id}}"
                                    data-product-id="{{this.productId._id}}" data-variant-id="{{this.variantId}}" 
                                    data-status="{{this.status}}" {{#if (or (or (isEqual this.status "Cancelled" )
                                    (isEqual this.status "Returned" )) (isEqual this.status "Return Approved"
                                    ))}}hidden{{/if}}>
                                    Cancel
                                </button>
                                {{/if}}
                            </div>


                            <div class="p-2">
                                {{#if (isReturnEligible this.deliveredDate)}}
                                <button type="button" class="btn btn-outline-primary">Rate this Product</button>
                                {{/if}}
                            </div>

                        </div>
                    </div>
                    <hr>
                    {{/each}}

                    <!-- Delivery Address -->
                    <div class="grid gap-1 d-flex justify-content-between ">
                        <div class="col-7 p-3 border border-2">

                            <p class="fw-bold">Shipping Address</p>
                            <p><span>{{order.shippingAddress.firstname}} {{order.shippingAddress.lastname}}</span>
                                <span>{{order.shippingAddress.phone}}</span>
                            </p>
                            <span>{{order.shippingAddress.address}}, {{order.shippingAddress.locality}},
                                {{order.shippingAddress.district}}, {{order.shippingAddress.state}} -
                                {{order.shippingAddress.pincode}}</span>
                        </div>
                        <div class="col-5 p-3 border border-2">
                            <p>Total Amount: {{order.totalAmount}}</p>
                            <p>Order ID: {{order.orderId}}</p>
                            <p>Ordered On: {{formatDate order.orderDate}}</p>
                            <p>Payment: {{order.payment.method}} - {{order.payment.status}}</p>
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>
</section>

<!-- Return Reason Modal -->
<div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnModalLabel">Select Return Reason</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="returnForm">
                    <input type="hidden" id="returnOrderId">
                    <input type="hidden" id="returnProductId">

                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="returnReason" value="Defective product"
                            id="reason1">
                        <label class="form-check-label" for="reason1">Defective product</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="returnReason" value="Received wrong item"
                            id="reason2">
                        <label class="form-check-label" for="reason2">Received wrong item</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="returnReason" value="Not as described"
                            id="reason3">
                        <label class="form-check-label" for="reason3">Not as described</label>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Confirm Return</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- Cancel Reason Modal -->
<div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cancelModalLabel">Select Cancellation Reason</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="cancelForm" method="POST">
                    <input type="hidden" name="orderId" id="orderId">
                    <input type="hidden" name="productId" id="productId">
                    <input type="hidden" name="variantId" id="variantId">
                    
                    <div>
                        <label><input type="radio" name="cancelReason" value="Order by mistake"> Order by mistake
                        </label><br>
                        <label><input type="radio" name="cancelReason" value="Found a better price"> Found a better
                            price </label><br>
                        <label><input type="radio" name="cancelReason" value="Delivery taking too long"> Delivery taking
                            too long </label><br>

                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" form="cancelForm" class="btn btn-danger">Confirm Cancellation</button>
            </div>
        </div>
    </div>
</div>



{{>footer}}


<!-- JavaScript for Confirmation -->
<script>
document.addEventListener("DOMContentLoaded", () => {
    document.body.addEventListener("click", async function (event) {
        const target = event.target;

        console.log("Clicked element:", target); // Debugging log

        if (target.classList.contains("return-btn") || target.classList.contains("cancel-btn")) {
            const action = target.getAttribute("data-action");
            const orderId = target.getAttribute("data-order-id");
            const productId = target.getAttribute("data-product-id");
            const variantId = target.getAttribute("data-variant-id");  // Capture the variant-id for cancel

            console.log("Action:", action);
            console.log("Order ID:", orderId);
            console.log("Product ID:", productId);
            console.log("Variant ID:", variantId);

            if (action === "return") {
                document.getElementById("returnOrderId").value = orderId;
                document.getElementById("returnProductId").value = productId;
                const returnModal = new bootstrap.Modal(document.getElementById("returnModal"));
                returnModal.show();
            } else if (action === "cancel") {
                document.getElementById("orderId").value = orderId;
                document.getElementById("productId").value = productId;
                document.getElementById("variantId").value = variantId;  // Set variant-id for cancel

                console.log("Opening Cancel Modal..."); // Debugging log

                const cancelModal = new bootstrap.Modal(document.getElementById("cancelModal"));
                cancelModal.show();
            }
        }
    });

    // Handle Return Submission
    document.getElementById("returnForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const returnModal = bootstrap.Modal.getInstance(document.getElementById("returnModal"));
        returnModal.hide(); // Close the modal first

        setTimeout(async () => {
            const orderId = document.getElementById("returnOrderId").value;
            const productId = document.getElementById("returnProductId").value;
            const reason = document.querySelector('input[name="returnReason"]:checked');
            if (!reason) {
                await Swal.fire("Error", "Please select a return reason!", "error");
                return;
            }

            await submitAction({ action: "return", orderId, productId, returnReason: reason.value });
        }, 300); // Small delay to ensure smooth UI transition
    });

    // Handle Cancel Submission
    document.getElementById("cancelForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const cancelModal = bootstrap.Modal.getInstance(document.getElementById("cancelModal"));
        cancelModal.hide(); // Close the modal first

        setTimeout(async () => {
            const orderId = document.getElementById("orderId").value;
            const productId = document.getElementById("productId").value;
            const variantId = document.getElementById("variantId").value;  // Get the variant-id from hidden input
            const reason = document.querySelector('input[name="cancelReason"]:checked');

            if (!reason) {
                await Swal.fire("Error", "Please select a cancellation reason!", "error");
                return;
            }

            await submitAction({ action: "cancel", orderId, productId, variantId, cancelReason: reason.value });
        }, 300); // Small delay for smooth transition
    });

    async function submitAction(payload) {
        const endpoint = payload.action === "return"
            ? `/order/return/${payload.orderId}/${payload.productId}`
            : `/order/cancel/${payload.orderId}/${payload.productId}/${payload.variantId}`;  // Include variantId for cancel

        try {
            const response = await fetch(endpoint, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(payload),
            });

            const data = await response.json();

            if (data.success) {
                await Swal.fire("Success", data.message, "success");
                location.reload(); // Refresh the page to update UI
            } else {
                await Swal.fire("Error", data.message, "error");
            }
        } catch (error) {
            console.error("Error:", error);
            await Swal.fire("Error", "An unexpected error occurred.", "error");
        }
    }
});


</script>