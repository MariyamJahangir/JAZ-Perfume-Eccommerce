<link rel="stylesheet" href="/styles/usersignup.css">

{{>header}}



<section>
  <div>
    <p class="text-center fs-2 fw-semibold pt-5">Login</p>
  </div>

  <div class="signup-container">
    <button class="btn btn-google w-100 mb-3">
      <a href="/auth/google" class="link-underline-opacity-0 link-secondary">
        <img src="/images/google.webp" alt="Google Icon" style="width: 20px; height: 20px;" class="me-2">
        Login using Google</a>
    </button>
    <div class="text-center my-2 d-flex align-items-center">
      <hr class="flex-grow-1 border-secondary">
      <span class="mx-2 text-muted">OR</span>
      <hr class="flex-grow-1 border-secondary">
    </div>
    <form id="login">
      <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input type="email" id="email" name="email" class="form-control">
      </div>
      <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <input type="password" id="password" name="password" class="form-control">
      </div>

      <div class="form-footer text-center mb-4">
        <a href="/forget-password" class=" link-dark link-underline-opacity-0 link-underline-opacity-75-hover">Forgot Password?</a>

      </div>
      <button type="submit" class="btn btn-primary w-100">Login</button>
    </form>
    <p class="text-center mt-4">
      Don't have an account? <a href="/signup"
        class="link-secondary link-underline-opacity-0 link-underline-opacity-75-hover">Sign up</a>
    </p>
  </div>
</section>


{{>footer}}



<script>
  document.getElementById("login").addEventListener("submit", async function (event) {
    event.preventDefault(); // Prevent form from submitting normally

    const email = document.getElementById("email").value.trim();
    const password = document.getElementById("password").value.trim();

    // Validate Empty Fields
    if (!email) {
        return Swal.fire({ icon: "error", title: "Validation Error", text: "Email is required." });
    }

    if (!password) {
        return Swal.fire({ icon: "error", title: "Validation Error", text: "Password is required." });
    }

    try {
        // Send Login Request
        const response = await fetch("/login", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email, password }),
        });

        const result = await response.json();

        if (result.success) {
            Swal.fire({
                icon: "success",
                title: "Login Successful",
                text: "Redirecting...",
                timer: 2000,
                showConfirmButton: false,
            });

            setTimeout(() => {
                window.location.href = "/"; // Redirect after success
            }, 2000);
        } else {
            Swal.fire({ icon: "error", title: "Login Failed", text: result.message });
        }
    } catch (error) {
        console.error("Login Error:", error);
        Swal.fire({ icon: "error", title: "Error", text: "Something went wrong. Please try again later." });
    }
});

</script>